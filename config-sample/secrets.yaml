#cat-tm-service.yaml & nectm.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cat-tm-service-secret
  namespace: default
type: Opaque
stringData:
   # IMPORTANT: Credentials must NOT be changed after initial startup!
  ActivaTm__AdminUser: "admin" # TODO - Username for NECTM Admin site and backend API
  ActivaTm__AdminPwd: "nectm_pass" # TODO - Password for NECTM Admin site and backend API
  ActivaTm__UserPwd: "87G2q67qmhQpDM6Q" # TODO - Choose strong, random password that will be used for backend communications
---
#cat-tool.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cat-tool-secret
  namespace: default
type: Opaque
stringData:
  CAT_DB_USER: "nltp_cattool_user" # TODO
  CAT_DB_PASSWORD: "nltp_cattool_pass" # TODO
---
#frontend-cms.yaml secrets
apiVersion: v1
kind: Secret
metadata:
  name: frontend-cms-secret
  namespace: default
type: Opaque
stringData:
  DATABASE_USERNAME: "nltp_cms_user" # TODO
  DATABASE_PASSWORD: "nltp_cms_pass" # TODO
  APP_KEYS: "ecYRdEL+yrJzEgZT6z/vOw==,Q7RycI2VqDlgr+Raw1pXgw==,pDMp1AzgWDE7n4zok3K97A==,jEhjbvTVWNcvVCD8pT/iGw==" # TODO
  API_TOKEN_SALT: "RvNRGeYZIE4yM8UdVso3wA==" # TODO
  ADMIN_JWT_SECRET: "QHM0ax3XAuKYeQJVIVnM9A==" # TODO
  JWT_SECRET: "SBVi5nVGukNnYA8GkfcANw==" # TODO
---
apiVersion: v1
kind: Secret
metadata:
  name: file-service
  namespace: default
stringData:
  username: "fsuser" # TODO
  password: "fspass1" # TODO
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq
  namespace: default
stringData:
  # `uri`, `username`, `password` is used by RabbitmqSource https://github.com/knative-sandbox/eventing-rabbitmq/releases/download/knative-v1.6.0/rabbitmq-source.yaml
  uri: rabbitmq.default:15672
  username: rmquser # TODO
  password: rmqpass # TODO
type: kubernetes.io/basic-auth
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-db-users
  namespace: default
stringData:
  filetranslation_db_user: nltp_filetranslation_user # TODO
  filetranslation_db_user_pwd: nltp_filetranslation_pass # TODO
  websitetranslation_db_user: nltp_websitetranslation_user # TODO
  websitetranslation_db_user_pwd: nltp_websitetranslation_pass # TODO
---
#keycloak.yaml
apiVersion: v1
kind: Secret
metadata:
  name: keycloak-secret
  namespace: default
type: Opaque
stringData:
  KEYCLOAK_USER: "kcadmin" # TODO | Keycloak admin user for "Keycloak Administration Console"- check instructions/Keycloak.md for more information
  KEYCLOAK_PASSWORD: "Parole123" # TODO | Keycloak admin user password
  DB_USER: "nltp_keycloak_user" # TODO
  DB_PASSWORD: "nltp_keycloak_pass" # TODO
---
apiVersion: v1
kind: Secret
metadata:
  name: translation-services
  namespace: default
stringData:
  system_import_username: "SystemImportUser" # TODO
  system_import_password: "mP5njyV9cP28kuTg" # TODO
  systems_db_connection_string: "server=mysql;database=nltp_translation_systems;user=nltp_translation_systems_user;password=nltp_translation_systems_pass" # TODO - update translation-services database connection string: MySQL DB Host, DB name, DB user name and password if necessary, example: "server=MYSQL_SERVER_HOST;database=TRANSLATION_SYSTEMS_DB_NAME;user=TRANSLATION_SYSTEMS_DB_USER_NAME;password=TRANSLATION_SYSTEMS_DB_USER_PASSWORD"
  etranslation_username: "ETRANSLATION_APPLICATION_NAME" # TODO
  etranslation_password: "ETRANSLATION_PASSWORD" # TODO
---
#access-management-service.yaml
apiVersion: v1
kind: Secret
metadata:
  name: access-management-service
  namespace: default
type: Opaque
stringData:
  Services__KeyCloak__KeyCloakOperations__ClientId: "access-management-service"
  Services__KeyCloak__KeyCloakOperations__ClientSecret: "0mlnEVfkBgWOKUp1PcCNFvDMxEysR803" # TODO | Set Value from Keycloak -> Main Realm -> Client -> "access-management-service" Credentials -> Client secret (Regenerate)
  Services__KeyCloak__KeyCloakImpersonation__ClientId: "api-impersonator"
  Services__KeyCloak__KeyCloakImpersonation__ClientSecret: "dThUCuWFMTYAK6NUkuyqonvdcHdUDSmA" # TODO | Set Value from Keycloak -> Main Realm -> Client -> "api-impersonator" Credentials ->  Client secret (Regenerate)
  Services__KeyCloak__ApiKeyDefaultPassword: "Example_PASSWORD_123ALKyecKRiKdRhx5XOy8miO9XKJ4xhvkZkbSyW2Z3Mw1JUAQxMfkNiD789" # TODO | Set a Strong default password for ApiKey users, which will be used for their impersonation. Needs to be identical for all the ApiKey users, so that must not be changed once set.
---
#frontend.yaml
apiVersion: v1
kind: Secret
metadata:
  name: frontend-secret
  namespace: default
type: Opaque
stringData:
  X_API_KEY: "24f58266-819e-45f4-a72d-786920bbd399" # TODO | Configure after initial deployment is done - check instructions/api-keys.md
---
# website-translation-service.yaml
apiVersion: v1
kind: Secret
metadata:
  name: website-translation-service
  namespace: default
type: Opaque
stringData:
  Configuration__ServiceAPIKey: "ef3d6a45-b91d-48c9-b0a4-436a6c1b120c" # TODO | Configure after initial deployment is done - check instructions/api-keys.md
