apiVersion: v1
kind: Service
metadata:
  labels:
    app: frontend-cms
  name: frontend-cms
  namespace: default
spec:
  ports:
  - name: "80"
    port: 80
    targetPort: 1337
  selector:
    app: frontend-cms
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: frontend-cms
  name: frontend-cms
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-cms
  strategy: {}
  template:
    metadata:
      labels:
        app: frontend-cms
    spec:
      containers:
      - env:
        - name: DATABASE_CLIENT
          valueFrom:
           configMapKeyRef:
            name: frontend-cms-config
            key: DATABASE_CLIENT
        - name: DATABASE_HOST
          valueFrom:
           configMapKeyRef:
            name: frontend-cms-config
            key: DATABASE_HOST
        - name: DATABASE_NAME
          valueFrom:
           configMapKeyRef:
            name: frontend-cms-config
            key: DATABASE_NAME
        - name: DATABASE_PASSWORD
          valueFrom:
           secretKeyRef:
            name: frontend-cms-secret
            key: DATABASE_PASSWORD
        - name: DATABASE_PORT
          valueFrom:
           configMapKeyRef:
            name: frontend-cms-config
            key: DATABASE_PORT
        - name: DATABASE_USERNAME
          valueFrom:
           secretKeyRef:
            name: frontend-cms-secret
            key: DATABASE_USERNAME
        - name: APP_KEYS
          valueFrom:
           secretKeyRef:
            name: frontend-cms-secret
            key: APP_KEYS
        - name: API_TOKEN_SALT
          valueFrom:
           secretKeyRef:
            name: frontend-cms-secret
            key: API_TOKEN_SALT
        - name: ADMIN_JWT_SECRET
          valueFrom:
           secretKeyRef:
            name: frontend-cms-secret
            key: ADMIN_JWT_SECRET
        - name: JWT_SECRET
          valueFrom:
           secretKeyRef:
            name: frontend-cms-secret
            key: JWT_SECRET
        image: nltpcontainers.azurecr.io/strapi-cms:47120
        imagePullPolicy: "IfNotPresent"
        name: frontend-cms
        ports:
        - containerPort: 1337
        volumeMounts:
        - mountPath: "/opt/app/public/uploads"
          name: cms-storage
        resources:
          requests:
            cpu: "10m"
            memory: "210Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
      imagePullSecrets:
         - name: nltp-cr-pull-secret
      restartPolicy: Always
      volumes:
      - name: cms-storage
        persistentVolumeClaim:
          claimName: cms-data-pv-claim
status: {}